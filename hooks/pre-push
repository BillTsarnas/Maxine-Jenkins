#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha
do
	if [ "$local_sha" = $z40 ]
	then
		# Handle delete
		:
	else
		if [ "$remote_sha" = $z40 ]
		then
			# New branch, examine all commits
			range="$local_sha"
		else
			# Update to existing branch, examine new commits
			range="$remote_sha..$local_sha"
			
			export WORKDIR=/home/orion/work
			export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
			export MAXINE_HOME=$WORKDIR/maxine
			export GRAAL_HOME=$WORKDIR/graal
			export PATH=$PATH:$GRAAL_HOME/mxtool/:$MAXINE_HOME/com.oracle.max.vm.native/generated/linux/

			export SPECJVM2008=$WORKDIR/Benchmarks/SPECjvm2008
			export DACAPOBACH=$WORKDIR/Benchmarks/DacapoBach

			cd ~/work/maxine

			echo "*-* Build started."
			mx build
			if [ $? != 0 ] ; then
				echo "*-* Build failed. Abort"
				exit 1
			else
				echo "*-* Build completed."
				mx image
				if [ $? != 0 ] ; then
					echo "*-* Image creation failed. Abort"
					exit 1
				else
					echo "*-* Image creation completed successfuly."
					echo "*-* Gating process started"
					echo "*-* Steps: helloworld, junit tests, dacapo:eclipse (x2), specjvm:compiler.compiler (x2)"
					mx gating_iso			
					if [ $? != 0 ] ; then
						echo "*-* Gating process failed"
						echo "*-* Push not accepted"
						exit 1
					else
						echo "*-* Gating process completed successfuly."
						echo "*-* Push accepted"
						exit 0
					fi
				fi
			fi
		fi

		# Check for WIP commit
		commit=`git rev-list -n 1 --grep '^WIP' "$range"`
		if [ -n "$commit" ]
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0
